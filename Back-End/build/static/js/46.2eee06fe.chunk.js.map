{"version":3,"sources":["../node_modules/@material-ui/icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","admin/views/TextFields/AutocompleteMultiple.jsx"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","d","SwitchBase_SwitchBase","react","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","objectWithoutProperties","_useControlled","useControlled","controlled","Boolean","state","_useControlled2","slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","esm_extends","component","clsx_m","root","role","undefined","event","input","newChecked","target","internal_SwitchBase","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","data-indeterminate","fontSize","esm_Checkbox_Checkbox","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","react_default","a","CheckBoxOutlineBlank_default","CheckBox_default","AutocompleteMultiple","_this$props","this","label","options","renderInput","renderTags","Autocomplete","style","marginTop","multiple","disableCloseOnSelect","getOptionLabel","option","itemName","renderOption","_ref","selected","Fragment","Component"],"mappings":"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","file":"static/js/46.2eee06fe.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return (\n    /*#__PURE__*/\n    React.createElement(IconButton, _extends({\n      component: \"span\",\n      className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n      disabled: disabled,\n      tabIndex: null,\n      role: undefined,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      ref: ref\n    }, other),\n    /*#__PURE__*/\n    React.createElement(\"input\", _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon)\n  );\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon =\n/*#__PURE__*/\nReact.createElement(CheckBoxIcon, null);\nvar defaultIcon =\n/*#__PURE__*/\nReact.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon =\n/*#__PURE__*/\nReact.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(SwitchBase, _extends({\n      type: \"checkbox\",\n      classes: {\n        root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n        checked: classes.checked,\n        disabled: classes.disabled\n      },\n      color: color,\n      inputProps: _extends({\n        'data-indeterminate': indeterminate\n      }, inputProps),\n      icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n        fontSize: size === 'small' ? 'small' : 'default'\n      }),\n      checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n        fontSize: size === 'small' ? 'small' : 'default'\n      }),\n      ref: ref\n    }, other))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\nclass AutocompleteMultiple extends Component {\r\n    \r\n    render() {\r\n        const { event,value, onChange, label, options,renderInput, renderTags } = this.props;\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    id=\"checkbox\"\r\n                    size=\"small\"\r\n                    style={{marginTop: 10}}\r\n                    multiple\r\n                    event={event}\r\n                    disableCloseOnSelect\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    renderTags={renderTags}\r\n                    // renderTags={() => {}}\r\n                    label={label}\r\n                    options={options}\r\n                    getOptionLabel={(option) => option.itemName}\r\n                    renderOption={(option, { selected }) => (\r\n                        <React.Fragment>\r\n                          <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            checked={selected}\r\n                          />\r\n                          {option.itemName}\r\n                        </React.Fragment>\r\n                      )}\r\n                    renderInput={renderInput}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutocompleteMultiple;"],"sourceRoot":""}