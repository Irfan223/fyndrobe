{"version":3,"sources":["user/dropdown.js"],"names":["Checkbox","React","lazy","__webpack_require__","e","then","bind","Radio","mens","value","label","size","discountRange","Dropdown","state","mensSelected","selectedOption","onRadio","event","_this","setState","target","onCheck","checked","push","index","indexOf","splice","props","updateMensCheckbox","onSize","sort","a","b","_this2","this","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Fragment","className","style","fontSize","map","men","key","id","onchange","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","s","range","Component","connect","checkbox","dispatch","type","payload"],"mappings":"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","file":"static/js/73.424dacac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nconst Checkbox = React.lazy(() => import('./buttons/checkbox/checkbox'));\r\nconst Radio = React.lazy(() => import('./buttons/radio/radio'));\r\nconst mens = [\r\n  { value: \"1\", label: \"Shirt\" },\r\n  { value: \"2\", label: \"Jeans\" },\r\n  { value: \"3\", label: \"T-Shits\" },\r\n  { value: \"4\", label: \"Joggers\" },\r\n  { value: \"5\", label: \"Jacket\" },\r\n];\r\nconst price = [\r\n  { value: \"1\", label: \"S\" },\r\n  { value: \"2\", label: \"M\" },\r\n  { value: \"3\", label: \"L\" },\r\n  { value: \"4\", label: \"XL\" },\r\n  { value: \"5\", label: \"XXL\" },\r\n  { value: \"6\", label: \"XXXL\" }\r\n];\r\nconst size = [\r\n  { value: \"1\", label: \"S\" },\r\n  { value: \"2\", label: \"M\" },\r\n  { value: \"3\", label: \"L\" },\r\n  { value: \"4\", label: \"XL\" },\r\n  { value: \"5\", label: \"XXL\" },\r\n  { value: \"6\", label: \"XXXL\" }\r\n];\r\n\r\nconst discountRange = [\r\n  { value: \"above 10\", label: \"10% and above\" },\r\n  { value: \"above 20\", label: \"20% and above\" },\r\n  { value: \"above 30\", label: \"30% and above\" },\r\n  { value: \"above 40\", label: \"40% and above\" },\r\n  { value: \"above 50\", label: \"50% and above\" },\r\n  { value: \"above 60\", label: \"60% and above\" },\r\n  { value: \"above 70\", label: \"70% and above\" },\r\n  { value: \"above 80\", label: \"80% and above\" },\r\n];\r\n\r\nclass Dropdown extends Component {\r\n  state = {\r\n    mensSelected: [],\r\n    size: [],\r\n    selectedOption: \"\",\r\n  };\r\n  onRadio = (event) => {\r\n    // alert(selectedOption.value);\r\n    this.setState({\r\n      selectedOption: event.target.value,\r\n    });\r\n  };\r\n  onCheck = (e) => {\r\n    //copying the state array to in local array\r\n    const mensSelected = this.state.mensSelected;\r\n    // check if the check box is checked or unchecked\r\n    if (e.target.checked) {\r\n      // add the numerical value of the checkbox to discountRange array\r\n      mensSelected.push(+e.target.value);\r\n    } else {\r\n      // or remove the value from the unchecked checkbox from the array\r\n      const index = mensSelected.indexOf(+e.target.value);\r\n      mensSelected.splice(index, 1);\r\n    }\r\n\r\n    // sort the array\r\n    // const array = mensSelected.sort((a, b) => {\r\n    //   return a - b;\r\n    // });\r\n    // update the state with the new array of discountRange\r\n    // this.setState({ mensSelected: mensSelected });\r\n    this.props.updateMensCheckbox(mensSelected);\r\n  };\r\n  onSize = (e) => {\r\n    //copying the state array to in local array\r\n    const size = this.state.size;\r\n    // check if the check box is checked or unchecked\r\n    if (e.target.checked) {\r\n      // add the numerical value of the checkbox to discountRange array\r\n      size.push(+e.target.value);\r\n    } else {\r\n      // or remove the value from the unchecked checkbox from the array\r\n      const index = size.indexOf(+e.target.value);\r\n      size.splice(index, 1);\r\n    }\r\n\r\n    // sort the array\r\n    const array = size.sort((a, b) => {\r\n      return a - b;\r\n    });\r\n    // console.log(array);\r\n\r\n    // update the state with the new array of discountRange\r\n    this.setState({ size: size });\r\n  };\r\n\r\n  // window.scrollTo(0, 0);\r\n\r\n  render() {\r\n    const { selectedOption, mensSelected } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {/*  category */}\r\n        <p\r\n          className='pt-2 text-uppercase font-weight-bold '\r\n          style={{ fontSize: \"14px\" }}\r\n        >\r\n          CATEGORIES\r\n            </p>\r\n        {mens.map((men) => (\r\n          <Checkbox\r\n            key={men.id}\r\n            label={men.label}\r\n            value={men.value}\r\n            onchange={this.onCheck}\r\n          />\r\n        ))}\r\n        <Divider />\r\n        {/* size */}\r\n        <p\r\n          className='pt-2 text-uppercase font-weight-bold '\r\n          style={{ fontSize: \"14px\" }}\r\n        >\r\n          size\r\n            </p>\r\n        {size.map((s) => (\r\n          <Checkbox\r\n            key={s.id}\r\n            label={s.label}\r\n            value={s.value}\r\n            onchange={this.onSize}\r\n          />\r\n        ))}\r\n        {/* Radio */}\r\n        <p\r\n          className='pt-2 text-uppercase font-weight-bold '\r\n          style={{ fontSize: \"14px\" }}\r\n        >\r\n          discount range\r\n            </p>\r\n        {discountRange.map((range) => (\r\n          <Radio\r\n            onchange={this.onRadio}\r\n            value={range.value}\r\n            label={range.label}\r\n          />\r\n        ))}\r\n        <p>Radio: {selectedOption}</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    checkbox: state.mensSelected,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateMensCheckbox: (mensSelected) => { dispatch({ type: 'UPDATE_MENS_CHECKBOX', payload: mensSelected }) }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);\r\n"],"sourceRoot":""}